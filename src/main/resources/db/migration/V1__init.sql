CREATE SEQUENCE IF NOT EXISTS token_seq START WITH 1 INCREMENT BY 50;

CREATE TABLE analysis
(
    id         INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    event_type VARCHAR(255),
    user_id    BIGINT,
    course_id  BIGINT,
    lesson_id  BIGINT,
    CONSTRAINT pk_analysis PRIMARY KEY (id)
);

CREATE TABLE course_subscribers
(
    course_id BIGINT NOT NULL,
    user_id   BIGINT NOT NULL
);

CREATE TABLE courses
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name         VARCHAR(255),
    description  VARCHAR(255),
    company_name VARCHAR(255),
    create_at    date,
    update_at    date,
    moderator_id BIGINT,
    CONSTRAINT pk_courses PRIMARY KEY (id)
);

CREATE TABLE lessons
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name        VARCHAR(255),
    description VARCHAR(255),
    module_id   BIGINT,
    CONSTRAINT pk_lessons PRIMARY KEY (id)
);

CREATE TABLE minio_files
(
    id           INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    file_name    VARCHAR(255),
    file_url     VARCHAR(255),
    content_type VARCHAR(255),
    size         BIGINT,
    uploaded_at  TIMESTAMP WITHOUT TIME ZONE,
    user_id      BIGINT,
    CONSTRAINT pk_minio_files PRIMARY KEY (id)
);

CREATE TABLE modules
(
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name      VARCHAR(255),
    course_id BIGINT,
    CONSTRAINT pk_modules PRIMARY KEY (id)
);

CREATE TABLE tests
(
    id             BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    question       VARCHAR(255),
    option1        VARCHAR(255),
    option2        VARCHAR(255),
    option3        VARCHAR(255),
    option4        VARCHAR(255),
    correct_option VARCHAR(255),
    topic_id       BIGINT,
    CONSTRAINT pk_tests PRIMARY KEY (id)
);

CREATE TABLE token
(
    id         BIGINT  NOT NULL,
    token      VARCHAR(255),
    token_type VARCHAR(255),
    revoked    BOOLEAN NOT NULL,
    expired    BOOLEAN NOT NULL,
    user_id    BIGINT,
    CONSTRAINT pk_token PRIMARY KEY (id)
);

CREATE TABLE topics
(
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name      VARCHAR(255),
    lesson_id BIGINT,
    CONSTRAINT pk_topics PRIMARY KEY (id)
);

CREATE TABLE user_progress
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_id      BIGINT,
    course_id    BIGINT,
    module_id    BIGINT,
    lesson_id    BIGINT,
    topic_id     BIGINT,
    completed    BOOLEAN                                 NOT NULL,
    completed_at TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_user_progress PRIMARY KEY (id)
);

CREATE TABLE users
(
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    username  VARCHAR(255),
    email     VARCHAR(255),
    password  VARCHAR(255),
    otp       VARCHAR(255),
    attempt   INTEGER,
    check_otp BOOLEAN,
    active    BOOLEAN,
    role      VARCHAR(255),
    CONSTRAINT pk_users PRIMARY KEY (id)
);

ALTER TABLE token
    ADD CONSTRAINT uc_token_token UNIQUE (token);

ALTER TABLE analysis
    ADD CONSTRAINT FK_ANALYSIS_ON_COURSE FOREIGN KEY (course_id) REFERENCES courses (id);

ALTER TABLE analysis
    ADD CONSTRAINT FK_ANALYSIS_ON_LESSON FOREIGN KEY (lesson_id) REFERENCES lessons (id);

ALTER TABLE analysis
    ADD CONSTRAINT FK_ANALYSIS_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE lessons
    ADD CONSTRAINT FK_LESSONS_ON_MODULE FOREIGN KEY (module_id) REFERENCES modules (id);

ALTER TABLE minio_files
    ADD CONSTRAINT FK_MINIO_FILES_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE modules
    ADD CONSTRAINT FK_MODULES_ON_COURSE FOREIGN KEY (course_id) REFERENCES courses (id);

ALTER TABLE tests
    ADD CONSTRAINT FK_TESTS_ON_TOPIC FOREIGN KEY (topic_id) REFERENCES topics (id);

ALTER TABLE token
    ADD CONSTRAINT FK_TOKEN_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE topics
    ADD CONSTRAINT FK_TOPICS_ON_LESSON FOREIGN KEY (lesson_id) REFERENCES lessons (id);

ALTER TABLE user_progress
    ADD CONSTRAINT FK_USER_PROGRESS_ON_COURSE FOREIGN KEY (course_id) REFERENCES courses (id);

ALTER TABLE user_progress
    ADD CONSTRAINT FK_USER_PROGRESS_ON_LESSON FOREIGN KEY (lesson_id) REFERENCES lessons (id);

ALTER TABLE user_progress
    ADD CONSTRAINT FK_USER_PROGRESS_ON_MODULE FOREIGN KEY (module_id) REFERENCES modules (id);

ALTER TABLE user_progress
    ADD CONSTRAINT FK_USER_PROGRESS_ON_TOPIC FOREIGN KEY (topic_id) REFERENCES topics (id);

ALTER TABLE user_progress
    ADD CONSTRAINT FK_USER_PROGRESS_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE course_subscribers
    ADD CONSTRAINT fk_cousub_on_course FOREIGN KEY (course_id) REFERENCES courses (id);

ALTER TABLE course_subscribers
    ADD CONSTRAINT fk_cousub_on_user FOREIGN KEY (user_id) REFERENCES users (id);